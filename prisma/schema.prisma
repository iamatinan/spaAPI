// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource postgres {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../src/generated/type-graphql"
}

generator erd {
  provider = "prisma-erd-generator"
}

model custommer {
  id        Int      @id @unique @default(autoincrement())
  name      String
  Lname     String
  email     String
  phone     String
  address   String
  create_at DateTime @default(now())
  appointment appointment[]
      recive_service recive_service?


}

model role {
  id        Int    @id @unique @default(autoincrement())
  role_name String
  user user[]
}

model user {
  id      Int    @id @unique @default(autoincrement())
  name    String
  lname   String
  email   String
  phone   String
  address String
role role[]  
}

model appointment {
  id                 Int     @id @unique @default(autoincrement())
  date_appoint       DateTime
  create_at          DateTime @default(now())
  appoint_by         String 
  booking_time_start String
  booking_time_end   String
  finish             Boolean
    
  custommer   custommer @relation(fields: [customer_id], references: [id])
  customer_id Int
    massager   massager @relation(fields: [massager_id], references: [id])
  massager_id Int
    recive_service recive_service?

}

model massager {
  id             Int    @id @unique @default(autoincrement())
  name           String
  lname          String
  user_id        String
appointment appointment[]
    recive_service recive_service?

}
model recive_service {
  id             Int    @id @unique @default(autoincrement())

  appointment      appointment   @relation(fields: [appointment_id], references: [id])
  appointment_id Int @unique 
   customer      custommer   @relation(fields: [customer_id], references: [id])
  customer_id Int @unique 

  massager      massager   @relation(fields: [massager_id], references: [id])
  massager_id Int @unique 
  product product[]
  promotion promotion[]
  service service[]
  receipt receipt?
}

model product {
  id            Int    @id @unique @default(autoincrement())
  name          String
  product       String
  product_price Int
  create_at DateTime @default(now())
  recive_service recive_service[]
}

model promotion {
  id              Int      @id @unique @default(autoincrement())
  promption_name  String
  discount_price  Int
  promotion_start DateTime
  promotion_end   DateTime
  create_at DateTime @default(now())
    recive_service recive_service[]

}

model receipt {
  id           Int      @id @unique @default(autoincrement())
  customer_id  Int
  create_by    Int
  create_at    DateTime @default(now())
  service_id   Int
  appoint_id   Int
  promotion_id Int
  product_id   Int
 recive_service   recive_service @relation(fields: [recive_service_id], references: [id])
  recive_service_id Int @unique

  
}

model service {
  id           Int    @id @unique @default(autoincrement())
  service_name String
  price        Int
  create_at DateTime @default(now())
    recive_service recive_service[]


}

model history_service {
  id           Int @id @unique @default(autoincrement())
  custommer_id Int
  note         Int
  receip_id    Int
    create_at DateTime @default(now())

}
